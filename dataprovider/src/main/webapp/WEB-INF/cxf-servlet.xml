<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:http-conf="http://cxf.apache.org/transports/http/configuration"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation=" 
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
		http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd">
	
	<import resource="classpath:META-INF/cxf/cxf.xml"/>
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>
	
	<http-conf:conduit name="*.http-conduit">
		<http-conf:client ConnectionTimeout="30000" ReceiveTimeout="120000"/>
	</http-conf:conduit>
	
	<bean id="dataProviderServiceImpl" autowire="byType" class="org.meteornetwork.meteor.provider.data.ws.DataProviderServiceImpl" scope="request">
		<aop:scoped-proxy/>
	</bean>
	
	<bean id="dataProviderHPCServiceImpl" autowire="byType" class="org.meteornetwork.meteor.provider.data.ws.DataProviderHPCServiceImpl" scope="request">
		<aop:scoped-proxy/>
	</bean>
 	
 	<bean id="MeteorSAMLTokenProcessor" autowire="byType" class="org.meteornetwork.meteor.common.ws.security.MeteorSAMLTokenProcessor">
		<lookup-method name="getRequestInfo" bean="requestInfo"/>
 	</bean>
 	
 	<bean id="MeteorSignatureProcessor" autowire="byType" class="org.meteornetwork.meteor.common.ws.security.MeteorSignatureProcessor"/>
		
 	<jaxws:endpoint 
		id="dataProviderService"
		implementorClass="org.meteornetwork.meteor.provider.data.ws.DataProviderServiceImpl"
		implementor="#dataProviderServiceImpl"
		bindingUri="http://www.w3.org/2003/05/soap/bindings/HTTP/"
		address="/DataProviderService">
		
		<jaxws:inInterceptors>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
				<constructor-arg>
					<map>
						<entry key="action" value="SAMLTokenSigned Signature"/>
						<entry key="signaturePropFile" value="wss4j.properties" />
						<entry key="wss4j.processor.map">
							<map key-type="javax.xml.namespace.QName">
								<entry>
									<key>
										<bean class="javax.xml.namespace.QName">
											<constructor-arg value="urn:oasis:names:tc:SAML:2.0:assertion"/>
											<constructor-arg value="Assertion"/>
										</bean>
									</key>
									<ref bean="MeteorSAMLTokenProcessor"/>
								</entry>
								<entry>
									<key>
										<bean class="javax.xml.namespace.QName">
											<constructor-arg value="http://www.w3.org/2000/09/xmldsig#"/>
											<constructor-arg value="Signature"/>
										</bean>
									</key>
									<ref bean="MeteorSignatureProcessor"/>
								</entry>
							</map>
						</entry>
					</map>
				</constructor-arg>
			</bean>
		</jaxws:inInterceptors>
	</jaxws:endpoint> 
	
	<jaxws:endpoint 
		id="submitHPC"
		implementorClass="org.meteornetwork.meteor.provider.data.ws.DataProviderHPCServiceImpl"
		implementor="#dataProviderHPCServiceImpl"
		endpointName="SubmitHPC"
		address="/DataProviderService">
		
		<jaxws:outInterceptors>
			<bean class="org.meteornetwork.meteor.common.hpc.HPCResponseRPCEncodingInterceptor"/>
		</jaxws:outInterceptors>
	</jaxws:endpoint>

	<!-- Registry web service connection -->
	<bean id="registrySamlCreationCallbackHandler" autowire="byType" class="org.meteornetwork.meteor.common.ws.security.RegistrySamlCreationCallbackHandler"/>
	<bean id="passwordCallbackHandler" autowire="byType" class="org.meteornetwork.meteor.common.ws.security.PasswordCallbackHandler"/>
	
	<bean id="registryProxyFactory" class="org.apache.cxf.jaxws.JaxWsProxyFactoryBean">
		<property name="serviceClass" value="org.meteornetwork.meteor.common.ws.RegistryService"/>
		<property name="address" value="${directory.ws.url}"/>
		<property name="outInterceptors">
			<list>
				<bean class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
					<constructor-arg>
						<map>
							<entry key="action" value="SAMLTokenSigned"/>
							<entry key="samlCallbackRef" value-ref="registrySamlCreationCallbackHandler" />
							<entry key="samlPropFile" value="authentication.properties" />
							<entry key="signaturePropFile" value="authentication.properties" />
							<entry key="passwordCallbackRef" value-ref="passwordCallbackHandler" />
						</map>
					</constructor-arg>
				</bean>
			</list>
		</property>
	</bean>
	
	<bean id="registryFailoverProxyFactory" class="org.apache.cxf.jaxws.JaxWsProxyFactoryBean">
		<property name="serviceClass" value="org.meteornetwork.meteor.common.ws.RegistryService"/>
		<property name="address" value="${directory.ws.failover.url}"/>
		<property name="outInterceptors">
			<list>
				<bean class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
					<constructor-arg>
						<map>
							<entry key="action" value="SAMLTokenSigned"/>
							<entry key="samlCallbackRef" value-ref="registrySamlCreationCallbackHandler" />
							<entry key="samlPropFile" value="authentication.properties" />
							<entry key="signaturePropFile" value="authentication.properties" />
							<entry key="passwordCallbackRef" value-ref="passwordCallbackHandler" />
						</map>
					</constructor-arg>
				</bean>
			</list>
		</property>
	</bean>
</beans>
