<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation=" 
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd"
    xmlns:util="http://www.springframework.org/schema/util">
 
	<!-- 
		map of meteor versions to DataQueryAdapter implementations 
	-->
	<util:map id="dataQueryAdapterVersionMap"
		key-type="java.lang.String"
		value-type="java.lang.String">
		
		<entry key="4.x.x" value="currentVersionDataQueryAdapterImpl"/>
		<entry key="3.x.x" value="hpcDataQueryAdapterImpl"/>
	</util:map>
	
	<!-- 
		Initializes Xalan templates objects to perform XSLT transforms 
	-->
	<bean id="transformerFactory" 
		class="javax.xml.transform.TransformerFactory"
		factory-method="newInstance" />
	
	<!-- SSN masking -->
	<bean id="MaskSSNTemplateFile" class="org.springframework.core.io.ClassPathResource">
		<constructor-arg value="xml/maskSSNs.xsl"/>
	</bean>
	
	<bean id="MaskSSNTemplate" 
		factory-bean="transformerFactory"
		factory-method="newTemplates">
		
		<constructor-arg>
			<bean class="javax.xml.transform.stream.StreamSource">
				<constructor-arg>
					<bean class="java.io.File"
						factory-bean="MaskSSNTemplateFile"
						factory-method="getFile" />
				</constructor-arg>
			</bean>
		</constructor-arg>
	</bean>
	
	<!-- 
		Convert AP 4.0.0 request to 3.3.4
	 -->
	<bean id="AP400toDP334RequestTemplateFile" class="org.springframework.core.io.ClassPathResource">
		<constructor-arg value="xml/AP4.0.0-DP3.3.4-request.xsl"/>
	</bean>
	
	<bean id="AP400toDP334RequestTemplate" 
		factory-bean="transformerFactory"
		factory-method="newTemplates">
		
		<constructor-arg>
			<bean class="javax.xml.transform.stream.StreamSource">
				<constructor-arg>
					<bean class="java.io.File"
						factory-bean="AP400toDP334RequestTemplateFile"
						factory-method="getFile" />
				</constructor-arg>
			</bean>
		</constructor-arg>
	</bean>
	
	<!-- 
		Convert AP 4.0.0 response to 3.3.4
	 -->
	<bean id="AP400toDP334ResponseTemplateFile" class="org.springframework.core.io.ClassPathResource">
		<constructor-arg value="xml/AP4.0.0-DP3.3.4-response.xsl"/>
	</bean>
	
	<bean id="AP400toDP334ResponseTemplate" 
		factory-bean="transformerFactory"
		factory-method="newTemplates">
		
		<constructor-arg>
			<bean class="javax.xml.transform.stream.StreamSource">
				<constructor-arg>
					<bean class="java.io.File"
						factory-bean="AP400toDP334ResponseTemplateFile"
						factory-method="getFile" />
				</constructor-arg>
			</bean>
		</constructor-arg>
	</bean>
	
	<!-- Request Template-version mapping -->
	<bean id="requestTemplateVersionMapper" class="org.meteornetwork.meteor.common.util.TemplateVersionMapper">
		<property name="templateVersionPairs">
			<list>
				<bean class="org.meteornetwork.meteor.common.util.TemplateVersionPair">
					<property name="versionFrom" value="4.x.x"/>
					<property name="versionTo" value="3.x.x"/>
					<property name="template"><ref bean="AP400toDP334RequestTemplate"/></property>
				</bean>
			</list>
		</property>
	</bean>
	
	<!-- Response Template-version mapping -->
	<bean id="responseTemplateVersionMapper" class="org.meteornetwork.meteor.common.util.TemplateVersionMapper">
		<property name="templateVersionPairs">
			<list>
				<bean class="org.meteornetwork.meteor.common.util.TemplateVersionPair">
					<property name="versionFrom" value="3.x.x"/>
					<property name="versionTo" value="4.x.x"/>
					<property name="template"><ref bean="AP400toDP334ResponseTemplate"/></property>
				</bean>
			</list>
		</property>
	</bean>
	
	<!-- 
		Convert standard SAML 1.0 Assertion into Meteor 3.3.4 SAML Assertion
	 -->
	<bean id="SAML1toMeteorSAMLTemplateFile" class="org.springframework.core.io.ClassPathResource">
		<constructor-arg value="xml/saml1-meteorSaml.xsl"/>
	</bean>
	
	<bean id="SAML1toMeteorSAMLTemplate" 
		factory-bean="transformerFactory"
		factory-method="newTemplates">
		
		<constructor-arg>
			<bean class="javax.xml.transform.stream.StreamSource">
				<constructor-arg>
					<bean class="java.io.File"
						factory-bean="SAML1toMeteorSAMLTemplateFile"
						factory-method="getFile" />
				</constructor-arg>
			</bean>
		</constructor-arg>
	</bean>
</beans> 