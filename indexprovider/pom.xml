<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>org.meteornetwork.meteor</groupId>
	<artifactId>indexprovider</artifactId>
	<version>4.0.0</version>
	
	<packaging>war</packaging>
	
	<name>Meteor Index Provider</name>
	<url>http://www.meteornetwork.org</url>
	
	<properties>
		<maven.compile.debug>on</maven.compile.debug>
		
		<meteor.version>4.0.0</meteor.version>
	
		<cglib.version>2.2.2</cglib.version>		
		<org.springframework.version>3.0.6.RELEASE</org.springframework.version>
		<cxf.version>2.4.3</cxf.version>
		<cxf.wss4j.version>1.6.4</cxf.wss4j.version>
		<wss4j.version>1.6.4</wss4j.version>
		<opensaml.version>2.5.1-1</opensaml.version>
		<joda-time.version>1.6.2</joda-time.version>
		
		<logback.version>0.9.30</logback.version>
		<slf4j.version>1.6.3</slf4j.version>		
		<commons-logging.version>1.1.1</commons-logging.version>
		<log4j.version>1.2.16</log4j.version>
		
		<junit.version>4.8.2</junit.version>
	</properties>
	
	<dependencies>
		<!-- Meteor Common Library -->
		<dependency>
			<groupId>org.meteornetwork.meteor</groupId>
			<artifactId>meteorlib</artifactId>
			<version>${meteor.version}</version>
		</dependency>
		
		<!-- code generation library ( for spring scoped-proxy ) -->
		<dependency>
		    <groupId>cglib</groupId>
		    <artifactId>cglib</artifactId>
		    <version>${cglib.version}</version>
		</dependency>
		
		<!-- 
			Spring
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
	
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
	
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
	
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>
		
		<!-- 
			Apache CXF
		 -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxws</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.cxf</groupId>
		    <artifactId>cxf-rt-ws-security</artifactId>
		    <version>${cxf.version}</version>
		    <exclusions>
            	<exclusion>
		            <groupId>org.apache.ws.security</groupId>
		      		<artifactId>wss4j</artifactId>
	            </exclusion>
            	<exclusion>
		            <groupId>org.opensaml</groupId>
		    		<artifactId>opensaml</artifactId>
	            </exclusion>
	            <exclusion>
		            <groupId>joda-time</groupId>
		    		<artifactId>joda-time</artifactId>
	            </exclusion>
            </exclusions>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.ws.security</groupId>
		    <artifactId>wss4j</artifactId>
		    <version>${wss4j.version}</version>
		</dependency>
		
		<dependency>
		    <groupId>org.opensaml</groupId>
		    <artifactId>opensaml</artifactId>
		    <version>${opensaml.version}</version>
		</dependency>
		
		<dependency>
		    <groupId>joda-time</groupId>
		    <artifactId>joda-time</artifactId>
		    <version>${joda-time.version}</version>
		</dependency>
		
		<!-- 
			Logging
		 -->
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-classic</artifactId>
		    <version>${logback.version}</version>
		</dependency>
		
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-api</artifactId>
		    <version>${slf4j.version}</version>
		</dependency>
		 
		<!-- Replace commons logging and log4j with jcl-over-slf4j and log4j-over-slf4j. Note: specifying 
			scope 'provided' on commons-logging and log4j is a Maven 2 hack. If you are using the maven
			eclipse:eclipse plugin, commons-logging and log4j will appear on the eclipse classpath.
		 -->
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>jcl-over-slf4j</artifactId>
		    <version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>${commons-logging.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>log4j-over-slf4j</artifactId>
		    <version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
			<scope>provided</scope>
		</dependency>
	
		<!-- 
			JUnit
		 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<build>
		<finalName>indexprovider</finalName>
	</build>
</project>
